[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sbom"
version = "2023.10.7"
description = "Tree shaking for the minimal viable SBOM."
readme = "README.md"
license = {file = "LICENSE"}
authors = [{ name = "Stefan Hagen", email = "stefan@hagen.link" }]
maintainers = [{ name = "Stefan Hagen", email = "stefan@hagen.link" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Build Tools",
]
keywords = [
    "baseline",
    "cyclonedx",
    "developer-tools",
    "extension",
    "software-bill-of-materials",
    "spdx",
    "validation",
]
dependencies = [
    "attrs >= 23.1.0",
    "cyclonedx-bom >= 3.11.7",
    "jsonschema >= 4.20.0",
    "referencing >= 0.31.0",
    "spdx-tools >= 0.8.2",
    "typer >= 0.9.0",
    "xmlschema >= 2.5.0",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = ["black", "coverage", "hypothesis", "mypy", "pytest", "pytest-cov", "pytest-flake8", "ruff"]

[project.urls]
Homepage = "https://git.sr.ht/~sthagen/sbom"
Bug-Tracker = "https://todo.sr.ht/~sthagen/sbom"
Documentation = "https://codes.dilettant.life/docs/sbom"
Source-Code = "https://git.sr.ht/~sthagen/sbom"
Test-Coverage = "https://codes.dilettant.life/coverage/sbom"

[project.scripts]
sbom = "sbom.cli:app"

[tool.setuptools.packages.find]
include = ["sbom"]
exclude = ["test*"]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = [ "py39", "py310", "py311", "py312" ]

[tool.coverage.run]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [ "pragma: no cover", "raise NotImplementedError", "if TYPE_CHECKING:", "@overload" ]
omit = [ "*/__main__.py" ]

[tool.mypy]
strict = true
implicit_reexport = true

[tool.pytest]
testpaths = "test"
filterwarnings = "error"

[tool.ruff]
line-length = 120
exclude = [ ".direnv", ".eggs", ".git", ".mypy_cache", ".ruff_cache", ".venv", "__pypackages__", "bin", "dist", "venv" ]
target-version = "py312"

[tool.ruff.lint]
select = [ "E", "F", "Q" ]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.lint.mccabe]
max-complexity = 42

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [ "E402" ]
